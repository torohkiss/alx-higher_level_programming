=============================
The 0-add_integer module
=============================

# python3 -m doctest -v ./tests/0-add_integer.txt

Import the function:

	>>> add_integer = __import__('0-add_integer').add_integer

For SUCCESS

	>>> add_integer(3, 2)
	5

    	>>> add_integer(-4.6, 2)
    	-2

   	>>> add_integer(3, -2)
    	1

    	>>> add_integer(-4, -3)
   	-7

    	>>> add_integer(2.5, 2.3)
   	4

Test default b=98 value:

    	>>> add_integer(2)
   	100

For failure:

    	>>> add_integer(4, "School")
   	Traceback (most recent call last):
    	TypeError: b must be an integer

	>>> add_integer(None)
    	Traceback (most recent call last):
    	TypeError: a must be an integer

    	>>> add_integer()
	Traceback (most recent call last):
  	TypeError: add_integer() missing 1 required positional argument: 'a'

    	>>> add_integer(1000e1000)
   	Traceback (most recent call last):
    	OverflowError: cannot convert float infinity to integer

    	>>> add_integer("Hello", "World")
    	Traceback (most recent call last):
    	TypeError: a must be an integer

    	>>> add_integer(float('nan'))
    	Traceback (most recent call last):
    	ValueError: cannot convert float NaN to integer
